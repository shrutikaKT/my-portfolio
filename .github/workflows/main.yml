name : Android Release

# Controls when the workflow will run
on :
  # Triggers the workflow on push or pull request events for the "main" branch
  push :
    branches : ["main"]

  #Allows you to run this workflow manually from the Actions tab from your GitHub repo
  workflow_dispatch:

# Contains a single job called build
jobs :
  # Contains the type of runner that the job will run on
  build :
    # Uses steps to represent a sequence of tasks that will be executed as part of job
    runs-on: macos-latest

    # Readies your repository under $GITHUB_WORKSPACE, so your job can access it
    steps :
      # Sets up Java so your job can use it for the Flutter app build
      - uses : actions/checkout@v3
      # Sets up Flutter using the subosito Flutter workflow
      - uses : actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: 'gradle'
      - name: Manually Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
          flutter --version
      # Adjusts to the Flutter version you are working with
      # - uses: subosito/flutter-action@v2
      #   with:
      #     # Runs a single command using the runnerâ€™s shell
      #     flutter-version: "3.6.0"
      #     channel: 'stable'
      #     cache : true
      - name: Analyze flutter builld
        run: flutter Analyze
      - name: Clean build artifacts
        run: flutter clean
      - name: Get dependencies
        run: flutter pub get
      # Runs a set of commands using the runners shell
      - name: Start release build
        run: flutter build apk --release
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-appbundle
          path: build/app/outputs/bundle/release/app-release.apk
